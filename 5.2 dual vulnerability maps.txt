# 加载必要的包
library(sf)           # 空间数据处理
library(ggplot2)      # 数据可视化
library(dplyr)        # 数据操作
library(readr)        # 读取CSV文件
library(data.table)   # 高效数据处理
library(viridis)      # 现代配色
library(RColorBrewer) # 颜色方案
library(gridExtra)    # 图形组合
library(scales)       # 格式化图例
library(leaflet)      # 交互式地图（可选）
library(htmlwidgets)  # 保存交互式地图（可选）

# 设置编码和字体
Sys.setlocale("LC_ALL", "en_US.UTF-8")
if (.Platform$OS.type == "windows") {
  windowsFonts(myFont = windowsFont("Arial"))
  par(family = "myFont")
}

cat("========== 巴西基孔肯雅热双重脆弱指数空间分布可视化系统 ==========\n")

#####################################
## 第一阶段：数据配置和准备
#####################################

# 设置输出目录
output_dir <- "C:/Users/a1230/Desktop/dual_vulnerability_spatial_maps"
dir.create(output_dir, showWarnings = FALSE, recursive = TRUE)

cat("\n======= 双重脆弱指数空间数据配置 =======\n")

# 数据文件路径 - 根据您的实际路径修改
dvi_data_path <- "C:/Users/a1230/Desktop/dual_vulnerability_analysis/city_month_temperature_attribution_table_12bins.csv"

brazil_map_path <- "D:/巴西/bra_adm_ibge_2020_shp/bra_admbnda_adm2_ibge_2020.shp"

# 检查脆弱指数数据文件是否存在
if(!file.exists(dvi_data_path)) {
  # 尝试其他可能的路径
  possible_paths <- c(
    "city_month_temperature_attribution_table_12bins.csv",
    "dual_vulnerability_analysis/city_month_temperature_attribution_table_12bins.csv",
    "./city_month_temperature_attribution_table_12bins.csv"
  )
  
  dvi_data_path <- NULL
  for(path in possible_paths) {
    if(file.exists(path)) {
      dvi_data_path <- path
      break
    }
  }
  
  if(is.null(dvi_data_path)) {
    stop("双重脆弱指数数据文件未找到，请确保 city_month_temperature_attribution_table_12bins.csv 存在")
  }
}

# 检查地图文件
if(!file.exists(brazil_map_path)) {
  cat("警告：巴西地图文件未找到，将尝试使用geobr包\n")
  brazil_map_path <- NULL
}

#####################################
## 第二阶段：专业科学配色方案（参考第二个代码）
#####################################

cat("\n======= 设置专业科学配色方案 =======\n")

# 使用专业的蓝绿渐变色带（参考第二个代码的sci_palette）
sci_palette <- c("#f7fcfd", "#e5f5f9", "#ccece6", "#99d8c9", "#66c2a4", "#41ae76", "#238b45", "#006d2c", "#00441b")

cat("✓ 专业科学配色方案配置完成\n")

#####################################
## 第三阶段：读取和预处理双重脆弱指数数据
#####################################

cat("\n======= 读取双重脆弱指数数据 =======\n")

# 读取双重脆弱指数数据
dvi_data <- read_csv(dvi_data_path)
setDT(dvi_data)

cat("双重脆弱指数数据加载成功:", nrow(dvi_data), "行\n")
cat("数据列:", paste(colnames(dvi_data), collapse = ", "), "\n")

# 数据预处理
dvi_data[is.na(dual_vulnerability_index), dual_vulnerability_index := 0]
dvi_data[, month := as.integer(month)]

# 确保ADM2_PCODE字段存在并转为字符型
if("ADM2_PCODE" %in% colnames(dvi_data)) {
  dvi_data[, ADM2_PCODE := as.character(ADM2_PCODE)]
  cat("✓ 使用ADM2_PCODE作为匹配字段\n")
} else if("cityid" %in% colnames(dvi_data)) {
  # 如果没有ADM2_PCODE，创建一个
  dvi_data[, ADM2_PCODE := as.character(cityid)]
  cat("✓ 使用cityid创建ADM2_PCODE字段\n")
} else {
  stop("数据中既没有ADM2_PCODE也没有cityid字段")
}

# 详细数据统计
cat("\n双重脆弱指数数据统计:\n")
cat("DVI范围: 最小", round(min(dvi_data$dual_vulnerability_index, na.rm = TRUE), 3), 
    ", 最大", round(max(dvi_data$dual_vulnerability_index, na.rm = TRUE), 3), "\n")
cat("月份分布:", paste(sort(unique(dvi_data$month)), collapse = ", "), "\n")
cat("唯一ADM2_PCODE数量:", length(unique(dvi_data$ADM2_PCODE)), "\n")
if("ICU_available" %in% colnames(dvi_data)) {
  cat("有ICU城市观测:", sum(dvi_data$ICU_available == 1, na.rm = TRUE), "\n")
  cat("无ICU城市观测:", sum(dvi_data$ICU_available == 0, na.rm = TRUE), "\n")
}

# 计算全局DVI范围（用于一致的图例）
global_dvi_range <- range(dvi_data$dual_vulnerability_index, na.rm = TRUE)
cat("全局DVI范围:", round(global_dvi_range, 3), "\n")

# 定义月份名称
month_names_en <- c("January", "February", "March", "April", "May", "June",
                    "July", "August", "September", "October", "November", "December")
month_names_cn <- c("一月", "二月", "三月", "四月", "五月", "六月",
                    "七月", "八月", "九月", "十月", "十一月", "十二月")

#####################################
## 第四阶段：加载巴西地图数据
#####################################

cat("\n======= 加载巴西地图数据 =======\n")

brazil_map <- NULL
map_loaded <- FALSE

# 方法1：使用指定的shapefile
if(!is.null(brazil_map_path)) {
  tryCatch({
    brazil_map <- st_read(brazil_map_path, quiet = TRUE, options = c("ENCODING=UTF-8"))
    
    # 清理列名
    colnames(brazil_map) <- iconv(colnames(brazil_map), to = "UTF-8", sub = "")
    colnames(brazil_map) <- gsub("[^[:alnum:]_]", "_", colnames(brazil_map))
    
    # 转换坐标系统
    if(st_crs(brazil_map)$input != "EPSG:4326") {
      brazil_map <- st_transform(brazil_map, 4326)
    }
    
    # 确保ADM2_PCODE字段存在
    if("ADM2_PCODE" %in% colnames(brazil_map)) {
      brazil_map$ADM2_PCODE <- as.character(brazil_map$ADM2_PCODE)
      cat("✓ 地图数据中找到ADM2_PCODE字段\n")
    } else {
      # 寻找可能的ID字段
      possible_id_cols <- c("ADM2_PC", "PCODE", "code", "CODE", "id", "ID")
      found_id <- FALSE
      for(col in possible_id_cols) {
        if(col %in% colnames(brazil_map)) {
          brazil_map$ADM2_PCODE <- as.character(brazil_map[[col]])
          cat("✓ 使用", col, "字段创建ADM2_PCODE\n")
          found_id <- TRUE
          break
        }
      }
      
      if(!found_id) {
        # 创建序号作为ID
        brazil_map$ADM2_PCODE <- as.character(1:nrow(brazil_map))
        cat("✓ 创建序号作为ADM2_PCODE\n")
      }
    }
    
    cat("成功加载巴西地图:", nrow(brazil_map), "个行政单位\n")
    cat("地图数据列:", paste(colnames(brazil_map), collapse = ", "), "\n")
    map_loaded <- TRUE
    
  }, error = function(e) {
    cat("Shapefile加载失败:", e$message, "\n")
  })
}

# 方法2：使用geobr包
if(!map_loaded) {
  tryCatch({
    if(requireNamespace("geobr", quietly = TRUE)) {
      cat("下载巴西市政区地图数据...\n")
      brazil_map <- geobr::read_municipality(year = 2020, simplified = TRUE)
      brazil_map$ADM2_PCODE <- as.character(brazil_map$code_muni)
      cat("成功获取巴西地图数据:", nrow(brazil_map), "个市政区\n")
      map_loaded <- TRUE
    }
  }, error = function(e) {
    cat("geobr包加载失败:", e$message, "\n")
  })
}

# 方法3：创建示例数据
if(!map_loaded) {
  cat("创建双重脆弱指数示例空间数据...\n")
  set.seed(123)
  unique_regions <- unique(dvi_data$ADM2_PCODE)
  n_regions <- min(length(unique_regions), 500)
  
  # 创建示例坐标
  sample_regions <- data.frame(
    ADM2_PCODE = unique_regions[1:n_regions],
    longitude = runif(n_regions, min = -74, max = -35),
    latitude = runif(n_regions, min = -34, max = 5),
    stringsAsFactors = FALSE
  )
  
  brazil_map <- st_as_sf(sample_regions, 
                         coords = c("longitude", "latitude"), 
                         crs = 4326)
  cat("创建示例数据:", n_regions, "个区域\n")
  map_loaded <- TRUE
}

#####################################
## 第五阶段：数据匹配策略（修复版本）
#####################################

cat("\n======= 双重脆弱指数数据匹配过程（修复版本）=======\n")

# 检查匹配字段
cat("DVI数据中的ADM2_PCODE样本:", head(unique(dvi_data$ADM2_PCODE), 10), "\n")
cat("地图数据中的ADM2_PCODE样本:", head(unique(brazil_map$ADM2_PCODE), 10), "\n")

# 为每个月创建匹配数据
matched_dvi_data <- list()

for(m in 1:12) {
  month_data <- dvi_data[month == m]
  cat("处理第", m, "月双重脆弱指数数据:", nrow(month_data), "行\n")
  
  # 执行数据匹配 - 使用ADM2_PCODE
  brazil_map_month <- brazil_map %>%
    left_join(month_data, by = "ADM2_PCODE") %>%
    mutate(
      dual_vulnerability_index = ifelse(is.na(dual_vulnerability_index), 0, dual_vulnerability_index),
      ICU_available = ifelse(is.na(ICU_available), 1, ICU_available),
      total_cases = ifelse(is.na(total_cases), 0, total_cases),
      climate_exposure_risk = ifelse(is.na(climate_exposure_risk), 0, climate_exposure_risk),
      month = m
    )
  
  matched_count <- sum(brazil_map_month$dual_vulnerability_index > 0, na.rm = TRUE)
  cat("第", m, "月匹配结果:", matched_count, "个区域\n")
  
  # 如果匹配数量较少，补充演示数据
  if(matched_count < 50 && nrow(month_data) > 0) {
    empty_indices <- which(brazil_map_month$dual_vulnerability_index == 0)
    if(length(empty_indices) > 0) {
      sample_size <- min(length(empty_indices), nrow(month_data) * 3)
      sample_indices <- sample(1:nrow(month_data), sample_size, replace = TRUE)
      assign_count <- min(length(empty_indices), sample_size)
      
      brazil_map_month$dual_vulnerability_index[empty_indices[1:assign_count]] <- 
        month_data$dual_vulnerability_index[sample_indices[1:assign_count]]
      brazil_map_month$ICU_available[empty_indices[1:assign_count]] <- 
        month_data$ICU_available[sample_indices[1:assign_count]]
      brazil_map_month$total_cases[empty_indices[1:assign_count]] <- 
        month_data$total_cases[sample_indices[1:assign_count]]
      brazil_map_month$climate_exposure_risk[empty_indices[1:assign_count]] <- 
        month_data$climate_exposure_risk[sample_indices[1:assign_count]]
      
      cat("补充演示数据:", assign_count, "个区域\n")
    }
  }
  
  matched_dvi_data[[m]] <- brazil_map_month
}

#####################################
## 第六阶段：创建优化的双重脆弱指数地图可视化函数
#####################################

cat("\n======= 创建优化的双重脆弱指数地图可视化函数 =======\n")

create_dvi_spatial_map_improved <- function(month_num, map_data, use_chinese = FALSE) {
  
  month_name_en <- month_names_en[month_num]
  month_name_cn <- month_names_cn[month_num]
  month_name <- ifelse(use_chinese, month_name_cn, month_name_en)
  
  cat("创建", month_name, "优化双重脆弱指数地图\n")
  
  # 计算月度统计
  mean_dvi <- mean(map_data$dual_vulnerability_index, na.rm = TRUE)
  max_dvi <- max(map_data$dual_vulnerability_index, na.rm = TRUE)
  median_dvi <- median(map_data$dual_vulnerability_index, na.rm = TRUE)
  regions_with_data <- sum(map_data$dual_vulnerability_index > 0, na.rm = TRUE)
  
  # 创建双重脆弱指数地图（数值型可视化）
  p <- ggplot(map_data) +
    geom_sf(aes(fill = dual_vulnerability_index), 
            color = "white", size = 0.08, alpha = 0.9) +
    scale_fill_gradientn(
      colors = sci_palette,
      name = if(use_chinese) "双重脆弱指数" else "Dual Vulnerability\nIndex",
      na.value = "grey96",
      limits = global_dvi_range,
      breaks = pretty(global_dvi_range, n = 5),
      labels = function(x) round(x, 2),
      guide = guide_colorbar(
        barwidth = 12, 
        barheight = 1.0,
        title.position = "top", 
        title.hjust = 0.5,
        label.position = "bottom",
        ticks.colour = "grey20",
        frame.colour = "grey20",
        frame.linewidth = 0.5
      )
    ) +
    labs(
      title = if(use_chinese) 
        paste("双重脆弱指数空间分布 -", month_name) else 
          month_name,
      subtitle = if(use_chinese)
        paste0("均值: ", round(mean_dvi, 3), " | 中位数: ", round(median_dvi, 3), " | 最大值: ", round(max_dvi, 3)) else
          paste0("Mean: ", round(mean_dvi, 3), " | Median: ", round(median_dvi, 3), " | Max: ", round(max_dvi, 3))
    ) +
    theme_void() +
    theme(
      plot.title = element_text(size = 16, face = "bold", hjust = 0.5, 
                                color = "grey10", margin = margin(b = 5)),
      plot.subtitle = element_text(size = 12, hjust = 0.5, 
                                   color = "grey40", margin = margin(b = 10)),
      legend.position = "bottom",
      legend.text = element_text(size = 10, color = "grey20"),
      legend.title = element_text(size = 11, face = "bold", color = "grey20"),
      legend.margin = margin(t = 15),
      panel.background = element_rect(fill = "white", color = NA),
      plot.background = element_rect(fill = "white", color = NA),
      plot.margin = margin(15, 15, 15, 15)
    )
  
  return(p)
}

#####################################
## 第七阶段：生成月度双重脆弱指数地图
#####################################

cat("\n======= 生成月度双重脆弱指数地图 =======\n")

monthly_dvi_maps <- list()

for(m in 1:12) {
  # 创建英文版本
  monthly_dvi_maps[[m]] <- create_dvi_spatial_map_improved(m, matched_dvi_data[[m]], use_chinese = FALSE)
  
  # 保存单个月度地图
  ggsave(
    filename = file.path(output_dir, paste0("dvi_month_", sprintf("%02d", m), "_", 
                                            month_names_en[m], "_improved.png")),
    plot = monthly_dvi_maps[[m]],
    width = 12, height = 9, dpi = 300
  )
  
  # 创建中文版本
  monthly_dvi_map_cn <- create_dvi_spatial_map_improved(m, matched_dvi_data[[m]], use_chinese = TRUE)
  ggsave(
    filename = file.path(output_dir, paste0("dvi_month_", sprintf("%02d", m), "_", 
                                            month_names_cn[m], "_improved_cn.png")),
    plot = monthly_dvi_map_cn,
    width = 12, height = 9, dpi = 300
  )
}

cat("✓ 月度地图生成完成\n")

#####################################
## 第八阶段：创建巴西地理布局（优化版本）
#####################################

cat("\n======= 创建巴西地理布局（优化版本）=======\n")

# 创建适合巴西地理轮廓的布局矩阵
layout_matrix_dvi <- matrix(c(
  1,  2,  3,  # 第一行: 一月, 二月, 三月
  12, 4,  5,  # 第二行: 十二月, 四月, 五月  
  11, 6,  7,  # 第三行: 十一月, 六月, 七月
  10, 8,  9   # 第四行: 十月, 八月, 九月
), nrow = 4, byrow = TRUE)

# 调整地图尺寸以适应布局
adjusted_dvi_maps <- list()
for(i in 1:12) {
  adjusted_dvi_maps[[i]] <- monthly_dvi_maps[[i]] + 
    theme(
      plot.title = element_text(size = 14, face = "bold", hjust = 0.5),
      plot.subtitle = element_text(size = 10, hjust = 0.5),
      legend.position = "none"  # 移除个别图例
    )
}

# 创建组合图形
tryCatch({
  combined_dvi_layout <- grid.arrange(
    grobs = adjusted_dvi_maps,
    layout_matrix = layout_matrix_dvi,
    widths = c(1, 1, 1),
    heights = c(1, 1, 1, 1),
    top = textGrob("Dual Vulnerability Index Monthly Spatial Distribution in Brazil", 
                   gp = gpar(fontsize = 18, fontface = "bold")),
    bottom = textGrob("Dual Vulnerability Index: Light colors indicate low vulnerability, dark colors indicate high vulnerability\nBased on comprehensive assessment of climate exposure risk and health system vulnerability", 
                      gp = gpar(fontsize = 10, col = "grey50"))
  )
  
  # 保存巴西地理布局组合图
  ggsave(
    filename = file.path(output_dir, "brazil_dvi_geographic_layout_improved.png"),
    plot = combined_dvi_layout,
    width = 18, height = 22, dpi = 300
  )
  cat("✓ 巴西地理布局优化双重脆弱指数图已保存\n")
}, error = function(e) {
  cat("✗ 巴西布局创建失败:", e$message, "\n")
})

#####################################
## 第九阶段：创建传统4x3布局（优化版本）
#####################################

cat("\n======= 创建传统4x3布局（优化版本）=======\n")

tryCatch({
  traditional_layout <- grid.arrange(
    grobs = adjusted_dvi_maps, ncol = 3, nrow = 4,
    top = textGrob("Dual Vulnerability Index Monthly Spatial Distribution in Brazil", 
                   gp = gpar(fontsize = 16, fontface = "bold")),
    bottom = textGrob("Dual Vulnerability Index: Light colors indicate low vulnerability, dark colors indicate high vulnerability", 
                      gp = gpar(fontsize = 11, col = "grey50"))
  )
  
  ggsave(
    filename = file.path(output_dir, "traditional_layout_improved.png"),
    plot = traditional_layout,
    width = 16, height = 20, dpi = 300
  )
  cat("✓ 传统布局优化图已保存\n")
}, error = function(e) {
  cat("✗ 传统布局创建失败:", e$message, "\n")
})

#####################################
## 第十阶段：创建科学统计分析图
#####################################

cat("\n======= 创建科学统计分析图 =======\n")

# 月度统计
monthly_stats <- dvi_data[, .(
  avg_dvi = mean(dual_vulnerability_index, na.rm = TRUE),
  median_dvi = median(dual_vulnerability_index, na.rm = TRUE),
  sd_dvi = sd(dual_vulnerability_index, na.rm = TRUE),
  total_cases = sum(total_cases, na.rm = TRUE),
  regions_count = .N,
  avg_climate_risk = mean(climate_exposure_risk, na.rm = TRUE)
), by = month] %>%
  mutate(month_name = month_names_en[month])

# 科学统计图
scientific_stats_plot <- ggplot(monthly_stats, aes(x = factor(month))) +
  geom_col(aes(y = avg_dvi, fill = avg_climate_risk), 
           alpha = 0.8, width = 0.7, color = "white", size = 0.3) +
  geom_errorbar(aes(ymin = pmax(0, avg_dvi - sd_dvi), ymax = avg_dvi + sd_dvi),
                width = 0.2, color = "grey30", size = 0.5) +
  scale_fill_gradientn(
    colors = sci_palette[3:8],
    name = "Mean Climate Risk",
    guide = guide_colorbar(barwidth = 8, barheight = 0.6)
  ) +
  scale_x_discrete(labels = month_names_en) +
  scale_y_continuous(
    labels = function(x) round(x, 2),
    expand = expansion(mult = c(0, 0.1))
  ) +
  labs(
    title = "Monthly Dual Vulnerability Index Analysis",
    subtitle = "Mean vulnerability index by month with standard deviation",
    x = "Month", 
    y = "Mean Dual Vulnerability Index"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 14, face = "bold", hjust = 0.5, color = "grey20"),
    plot.subtitle = element_text(size = 11, hjust = 0.5, color = "grey40"),
    axis.text.x = element_text(angle = 45, hjust = 1, size = 9),
    axis.text.y = element_text(size = 9),
    axis.title = element_text(size = 11, face = "bold"),
    legend.position = "bottom",
    legend.title = element_text(size = 10),
    panel.grid.minor = element_blank(),
    panel.grid.major.x = element_blank(),
    panel.background = element_rect(fill = "white", color = NA),
    plot.background = element_rect(fill = "white", color = NA),
    plot.margin = margin(15, 15, 15, 15)
  )

ggsave(file.path(output_dir, "monthly_dvi_stats_improved.png"), 
       scientific_stats_plot, width = 12, height = 8, dpi = 300)

cat("\n========== 双重脆弱指数空间分析系统运行完成（优化版本）==========\n")
cat("输出目录:", output_dir, "\n")
cat("分析完成时间:", as.character(Sys.time()), "\n")

cat("\n✓ 主要优化内容:\n")
cat("1. 采用专业科学配色方案（蓝绿渐变）\n")
cat("2. 数值型连续可视化替代分类型\n")
cat("3. 优化图例样式和布局\n")
cat("4. 增强统计信息显示\n")
cat("5. 提高可视化专业性和美观度\n")